'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _xmmClient=require('xmm-client');var Xmm=_interopRequireWildcard(_xmmClient);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}var RAPID_MIX_DOC_VERSION='1.0.0';var RAPID_MIX_DEFAULT_LABEL='rapidmixDefaultLabel';/**
 * Convert a RapidMix training set Object to an XMM training set Object.
 */var rapidMixToXmmTrainingSet=function rapidMixToXmmTrainingSet(rapidMixTrainingSet){var payload=rapidMixTrainingSet.payload;var config={bimodal:payload.outputDimension>0,dimension:payload.inputDimension+payload.outputDimension,dimensionInput:payload.outputDimension>0?payload.inputDimension:0};var phraseMaker=new Xmm.PhraseMaker(config);var setMaker=new Xmm.SetMaker();for(var i=0;i<payload.data.length;i++){var datum=payload.data[i];phraseMaker.reset();phraseMaker.setConfig({label:datum.label});for(var j=0;j<datum.input.length;j++){var vector=datum.input[j];if(payload.outputDimension>0)vector=vector.concat(datum.output[j]);phraseMaker.addObservation(vector);}setMaker.addPhrase(phraseMaker.getPhrase());}return setMaker.getTrainingSet();};/**
 * Convert a RapidMix configuration Object to an XMM training set Object.
 */var rapidMixToXmmConfig=function rapidMixToXmmConfig(rapidMixConfig){return rapidMixConfig.payload;};/**
 * Convert an XMM model Object to a RapidMix model Object.
 */var xmmToRapidMixModel=function xmmToRapidMixModel(xmmModel){var modelType=xmmModel.configuration.default_parameters.states?'hhmm':'gmm';return{docType:'rapid-mix:ml:model',docVersion:RAPID_MIX_DOC_VERSION,target:{name:'xmm:'+modelType,version:'1.0.0'},payload:xmmModel};};/**
 * Convert a RapidMix training set Object to a RapidLib training set Object.
 */var rapidMixToRapidLibTrainingSet=function rapidMixToRapidLibTrainingSet(rapidMixTrainingSet){var rapidLibTrainingSet=[];for(var i=0;i<rapidMixTrainingSet.payload.data.length;i++){var phrase=rapidMixTrainingSet.payload.data[i];for(var j=0;j<phrase.input.length;j++){var el={label:phrase.label,input:phrase.input[j],output:phrase.output.length>0?phrase.output[j]:[]};rapidLibTrainingSet.push(el);}}return rapidLibTrainingSet;};exports.default={// rapidLib adapters
rapidMixToRapidLibTrainingSet:rapidMixToRapidLibTrainingSet,// xmm adapters
rapidMixToXmmTrainingSet:rapidMixToXmmTrainingSet,xmmToRapidMixModel:xmmToRapidMixModel,// constants
RAPID_MIX_DOC_VERSION:RAPID_MIX_DOC_VERSION,RAPID_MIX_DEFAULT_LABEL:RAPID_MIX_DEFAULT_LABEL};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlhtbSIsIlJBUElEX01JWF9ET0NfVkVSU0lPTiIsIlJBUElEX01JWF9ERUZBVUxUX0xBQkVMIiwicmFwaWRNaXhUb1htbVRyYWluaW5nU2V0IiwicGF5bG9hZCIsInJhcGlkTWl4VHJhaW5pbmdTZXQiLCJjb25maWciLCJiaW1vZGFsIiwib3V0cHV0RGltZW5zaW9uIiwiZGltZW5zaW9uIiwiaW5wdXREaW1lbnNpb24iLCJkaW1lbnNpb25JbnB1dCIsInBocmFzZU1ha2VyIiwiUGhyYXNlTWFrZXIiLCJzZXRNYWtlciIsIlNldE1ha2VyIiwiaSIsImRhdGEiLCJsZW5ndGgiLCJkYXR1bSIsInJlc2V0Iiwic2V0Q29uZmlnIiwibGFiZWwiLCJqIiwiaW5wdXQiLCJ2ZWN0b3IiLCJjb25jYXQiLCJvdXRwdXQiLCJhZGRPYnNlcnZhdGlvbiIsImFkZFBocmFzZSIsImdldFBocmFzZSIsImdldFRyYWluaW5nU2V0IiwicmFwaWRNaXhUb1htbUNvbmZpZyIsInJhcGlkTWl4Q29uZmlnIiwieG1tVG9SYXBpZE1peE1vZGVsIiwibW9kZWxUeXBlIiwieG1tTW9kZWwiLCJjb25maWd1cmF0aW9uIiwiZGVmYXVsdF9wYXJhbWV0ZXJzIiwic3RhdGVzIiwiZG9jVHlwZSIsImRvY1ZlcnNpb24iLCJ0YXJnZXQiLCJuYW1lIiwidmVyc2lvbiIsInJhcGlkTWl4VG9SYXBpZExpYlRyYWluaW5nU2V0IiwicmFwaWRMaWJUcmFpbmluZ1NldCIsInBocmFzZSIsImVsIiwicHVzaCJdLCJtYXBwaW5ncyI6InNFQUFBLHFDLEdBQVlBLEksK1FBRVosR0FBTUMsdUJBQXdCLE9BQTlCLENBQ0EsR0FBTUMseUJBQTBCLHNCQUFoQyxDQUVBOztHQUdBLEdBQU1DLDBCQUEyQixRQUEzQkEseUJBQTJCLHFCQUF1QixDQUN0RCxHQUFNQyxTQUFVQyxvQkFBb0JELE9BQXBDLENBRUEsR0FBTUUsUUFBUyxDQUNiQyxRQUFTSCxRQUFRSSxlQUFSLENBQTBC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KiBhcyBYbW0gZnJvbSAneG1tLWNsaWVudCc7XG5cbmNvbnN0IFJBUElEX01JWF9ET0NfVkVSU0lPTiA9ICcxLjAuMCc7XG5jb25zdCBSQVBJRF9NSVhfREVGQVVMVF9MQUJFTCA9ICdyYXBpZG1peERlZmF1bHRMYWJlbCc7XG5cbi8qKlxuICogQ29udmVydCBhIFJhcGlkTWl4IHRyYWluaW5nIHNldCBPYmplY3QgdG8gYW4gWE1NIHRyYWluaW5nIHNldCBPYmplY3QuXG4gKi9cbmNvbnN0IHJhcGlkTWl4VG9YbW1UcmFpbmluZ1NldCA9IHJhcGlkTWl4VHJhaW5pbmdTZXQgPT4ge1xuICBjb25zdCBwYXlsb2FkID0gcmFwaWRNaXhUcmFpbmluZ1NldC5wYXlsb2FkO1xuXG4gIGNvbnN0IGNvbmZpZyA9IHtcbiAgICBiaW1vZGFsOiBwYXlsb2FkLm91dHB1dERpbWVuc2lvbiA+IDAsXG4gICAgZGltZW5zaW9uOiBwYXlsb2FkLmlucHV0RGltZW5zaW9uICsgcGF5bG9hZC5vdXRwdXREaW1lbnNpb24sXG4gICAgZGltZW5zaW9uSW5wdXQ6IChwYXlsb2FkLm91dHB1dERpbWVuc2lvbiA+IDApID8gcGF5bG9hZC5pbnB1dERpbWVuc2lvbiA6IDAsXG4gIH07XG5cbiAgY29uc3QgcGhyYXNlTWFrZXIgPSBuZXcgWG1tLlBocmFzZU1ha2VyKGNvbmZpZyk7XG4gIGNvbnN0IHNldE1ha2VyID0gbmV3IFhtbS5TZXRNYWtlcigpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGF5bG9hZC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgZGF0dW0gPSBwYXlsb2FkLmRhdGFbaV07XG5cbiAgICBwaHJhc2VNYWtlci5yZXNldCgpO1xuICAgIHBocmFzZU1ha2VyLnNldENvbmZpZyh7IGxhYmVsOiBkYXR1bS5sYWJlbCB9KTtcblxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgZGF0dW0uaW5wdXQubGVuZ3RoOyBqKyspIHtcbiAgICAgIGxldCB2ZWN0b3IgPSBkYXR1bS5pbnB1dFtqXTtcblxuICAgICAgaWYgKHBheWxvYWQub3V0cHV0RGltZW5zaW9uID4gMClcbiAgICAgICAgdmVjdG9yID0gdmVjdG9yLmNvbmNhdChkYXR1bS5vdXRwdXRbal0pO1xuXG4gICAgICBwaHJhc2VNYWtlci5hZGRPYnNlcnZhdGlvbih2ZWN0b3IpO1xuICAgIH1cblxuICAgIHNldE1ha2VyLmFkZFBocmFzZShwaHJhc2VNYWtlci5nZXRQaHJhc2UoKSk7XG4gIH1cblxuICByZXR1cm4gc2V0TWFrZXIuZ2V0VHJhaW5pbmdTZXQoKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgUmFwaWRNaXggY29uZmlndXJhdGlvbiBPYmplY3QgdG8gYW4gWE1NIHRyYWluaW5nIHNldCBPYmplY3QuXG4gKi9cbmNvbnN0IHJhcGlkTWl4VG9YbW1Db25maWcgPSByYXBpZE1peENvbmZpZyA9PiB7XG4gIHJldHVybiByYXBpZE1peENvbmZpZy5wYXlsb2FkO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYW4gWE1NIG1vZGVsIE9iamVjdCB0byBhIFJhcGlkTWl4IG1vZGVsIE9iamVjdC5cbiAqL1xuY29uc3QgeG1tVG9SYXBpZE1peE1vZGVsID0geG1tTW9kZWwgPT4ge1xuICBjb25zdCBtb2RlbFR5cGUgPSB4bW1Nb2RlbC5jb25maWd1cmF0aW9uLmRlZmF1bHRfcGFyYW1ldGVycy5zdGF0ZXMgPyAnaGhtbScgOiAnZ21tJztcblxuICByZXR1cm4ge1xuICAgIGRvY1R5cGU6ICdyYXBpZC1taXg6bWw6bW9kZWwnLFxuICAgIGRvY1ZlcnNpb246IFJBUElEX01JWF9ET0NfVkVSU0lPTixcbiAgICB0YXJnZXQ6IHtcbiAgICAgIG5hbWU6IGB4bW06JHttb2RlbFR5cGV9YCxcbiAgICAgIHZlcnNpb246ICcxLjAuMCdcbiAgICB9LFxuICAgIHBheWxvYWQ6IHhtbU1vZGVsLFxuICB9XG59O1xuXG5cbi8qKlxuICogQ29udmVydCBhIFJhcGlkTWl4IHRyYWluaW5nIHNldCBPYmplY3QgdG8gYSBSYXBpZExpYiB0cmFpbmluZyBzZXQgT2JqZWN0LlxuICovXG5jb25zdCByYXBpZE1peFRvUmFwaWRMaWJUcmFpbmluZ1NldCA9IHJhcGlkTWl4VHJhaW5pbmdTZXQgPT4ge1xuICBjb25zdCByYXBpZExpYlRyYWluaW5nU2V0ID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByYXBpZE1peFRyYWluaW5nU2V0LnBheWxvYWQuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHBocmFzZSA9IHJhcGlkTWl4VHJhaW5pbmdTZXQucGF5bG9hZC5kYXRhW2ldO1xuXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBwaHJhc2UuaW5wdXQubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvbnN0IGVsID0ge1xuICAgICAgICBsYWJlbDogcGhyYXNlLmxhYmVsLFxuICAgICAgICBpbnB1dDogcGhyYXNlLmlucHV0W2pdLFxuICAgICAgICBvdXRwdXQ6IHBocmFzZS5vdXRwdXQubGVuZ3RoID4gMCA/IHBocmFzZS5vdXRwdXRbal0gOiBbXSxcbiAgICAgIH07XG5cbiAgICAgIHJhcGlkTGliVHJhaW5pbmdTZXQucHVzaChlbCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJhcGlkTGliVHJhaW5pbmdTZXQ7XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLy8gcmFwaWRMaWIgYWRhcHRlcnNcbiAgcmFwaWRNaXhUb1JhcGlkTGliVHJhaW5pbmdTZXQsXG4gIC8vIHhtbSBhZGFwdGVyc1xuICByYXBpZE1peFRvWG1tVHJhaW5pbmdTZXQsXG4gIHhtbVRvUmFwaWRNaXhNb2RlbCxcblxuICAvLyBjb25zdGFudHNcbiAgUkFQSURfTUlYX0RPQ19WRVJTSU9OLFxuICBSQVBJRF9NSVhfREVGQVVMVF9MQUJFTFxufTtcbiJdfQ==